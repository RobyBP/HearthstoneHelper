plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def rapidApiHost = properties.getProperty("x-rapidapi-host")
def rapidApiKey = properties.getProperty("x-rapidapi-key")

if (rapidApiHost == null || rapidApiKey == null) {
    throw IllegalStateException("Rapid api host or token missing, configure it in local.properties file")
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.robybp.hearthstonehelper"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "BASE_URL", "\"https://omgvamp-hearthstone-v1.p.rapidapi.com\""
        buildConfigField "String", "RAPID_API_HOST", "\"$rapidApiHost\""
        buildConfigField "String", "RAPID_API_KEY", "\"$rapidApiKey\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'

    //Compose
    //noinspection GradleDependency
    implementation "androidx.compose.ui:ui:$compose_version"
    //noinspection GradleDependency
    implementation "androidx.compose.material:material:$compose_version"
    //noinspection GradleDependency
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    //noinspection GradleDependency
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    //noinspection GradleDependency
    implementation 'androidx.activity:activity-compose:1.3.1'
    //noinspection GradleDependency
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    //noinspection GradleDependency
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    //Koin
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //Serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //Okhttp
    implementation("com.squareup.okhttp3:okhttp:5.0.0-alpha.2")
    implementation("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")

    //Coil
    implementation("io.coil-kt:coil-compose:2.0.0-rc01")
}
